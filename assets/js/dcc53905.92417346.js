"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[964],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return y}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),s=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(a.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),y=o,f=m["".concat(a,".").concat(y)]||m[y]||u[y]||i;return n?r.createElement(f,c(c({ref:t},p),{},{components:n})):r.createElement(f,c({ref:t},p))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=m;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6906:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return a},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),c=["components"],l={id:"ecosystem-cycle",title:"single-spa-cycle",sidebar_label:"Cycle"},a=void 0,s={unversionedId:"ecosystem-cycle",id:"version-5.x/ecosystem-cycle",title:"single-spa-cycle",description:"single-spa-cycle is a helper library that helps implement single-spa registered application lifecycle functions (bootstrap, mount and unmount) for for use with Cycle.js. Check out the single-spa-cycle github.",source:"@site/versioned_docs/version-5.x/ecosystem-cycle.md",sourceDirName:".",slug:"/ecosystem-cycle",permalink:"/docs/ecosystem-cycle",editUrl:"https://github.com/single-spa/fr.single-spa.js.org/blob/master/website/versioned_docs/version-5.x/ecosystem-cycle.md",tags:[],version:"5.x",frontMatter:{id:"ecosystem-cycle",title:"single-spa-cycle",sidebar_label:"Cycle"},sidebar:"version-5.x/docs",previous:{title:"AngularJS",permalink:"/docs/ecosystem-angularjs"},next:{title:"Ember",permalink:"/docs/ecosystem-ember"}},p=[{value:"Installation",id:"installation",children:[],level:2},{value:"Quickstart",id:"quickstart",children:[],level:2},{value:"Options",id:"options",children:[],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"single-spa-cycle is a helper library that helps implement ",(0,i.kt)("a",{parentName:"p",href:"configuration#registering-applications"},"single-spa registered application")," ",(0,i.kt)("a",{parentName:"p",href:"/docs/building-applications#registered-application-lifecycle"},"lifecycle functions")," (bootstrap, mount and unmount) for for use with ",(0,i.kt)("a",{parentName:"p",href:"https://cycle.js.org/"},"Cycle.js"),". Check out the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pcmnac/single-spa-cycle"},"single-spa-cycle github"),"."),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save @pcmnac/single-spa-cycle\n")),(0,i.kt)("h2",{id:"quickstart"},"Quickstart"),(0,i.kt)("p",null,"In your project's entry file, add the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"\nimport {run} from '@cycle/run'\nimport {makeDOMDriver} from '@cycle/dom'\nimport singleSpaCycle from '@pcmnac/single-spa-cycle';\nimport rootComponent from './root.component.js';\n\nconst cycleLifecycles = singleSpaCycle({\n  run,\n  rootComponent,\n  drivers: { DOM: makeDOMDriver(document.getElementById('main-content'))}, // or { DOM: makeDOMDriver('#main-content')}\n});\n\nexport const bootstrap = cycleLifecycles.bootstrap;\nexport const mount = cycleLifecycles.mount;\nexport const unmount = cycleLifecycles.unmount;\n")),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("p",null,"All options are passed to single-spa-cycle via the ",(0,i.kt)("inlineCode",{parentName:"p"},"opts")," parameter when calling ",(0,i.kt)("inlineCode",{parentName:"p"},"singleSpaCycle(opts)"),". The following options are available:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"run"),": (required) Cycle.js run function."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"drivers"),": (required) Drivers (including DOM Driver) to be used by your Cycle.js root component."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"rootComponent"),": (required) The top level Cycle.js component which will be rendered")))}m.isMDXComponent=!0}}]);