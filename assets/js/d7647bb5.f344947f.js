"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5444],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6871:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var o=n(3117),r=n(102),a=(n(7294),n(3905)),i=["components"],l={id:"layout-overview",title:"Layout Engine",sidebar_label:"Overview"},s=void 0,p={unversionedId:"layout-overview",id:"version-5.x/layout-overview",title:"Layout Engine",description:"Introduction",source:"@site/versioned_docs/version-5.x/layout-overview.md",sourceDirName:".",slug:"/layout-overview",permalink:"/docs/layout-overview",editUrl:"https://github.com/single-spa/fr.single-spa.js.org/blob/master/website/versioned_docs/version-5.x/layout-overview.md",tags:[],version:"5.x",frontMatter:{id:"layout-overview",title:"Layout Engine",sidebar_label:"Overview"},sidebar:"version-5.x/docs",previous:{title:"E2E testing",permalink:"/docs/testing/e2e"},next:{title:"Layout Definition",permalink:"/docs/layout-definition"}},u=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Installation",id:"installation",children:[{value:"Browser / NodeJS support",id:"browser--nodejs-support",children:[],level:3},{value:"Requirements",id:"requirements",children:[],level:3}],level:2},{value:"Basic usage",id:"basic-usage",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/single-spa/single-spa-layout/"},"Github repository")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"single-spa-layout")," npm package is an optional add-on to single-spa. The layout engine provides a routing API that controls your top level routes, applications, and dom elements. Using single-spa-layout makes it easier to accomplish the following:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"DOM placement and ordering of applications."),(0,a.kt)("li",{parentName:"ul"},"Loading UIs when applications are downloaded."),(0,a.kt)("li",{parentName:"ul"},"Default routes for Not Found / 404 pages."),(0,a.kt)("li",{parentName:"ul"},"Transitions between routes (implementation pending)."),(0,a.kt)("li",{parentName:"ul"},"Server side rendering of single-spa applications"),(0,a.kt)("li",{parentName:"ul"},"Error pages")),(0,a.kt)("p",null,"In the browser, the layout engine performs two major tasks:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Generate ",(0,a.kt)("a",{parentName:"li",href:"/docs/api/#configuration-object"},"single-spa registration config")," from an HTML Element and/or JSON object."),(0,a.kt)("li",{parentName:"ol"},"Listen to ",(0,a.kt)("a",{parentName:"li",href:"/docs/api/#events"},"routing events")," to ensure that all DOM elements are laid out correctly before the single-spa applications are mounted.")),(0,a.kt)("p",null,"On the server, the layout engine performs two tasks:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Construct a ",(0,a.kt)("a",{parentName:"li",href:"/docs/layout-api#constructserverlayout"},"server layout object")," from an HTML template."),(0,a.kt)("li",{parentName:"ol"},"Send an HTML document (HTTP response headers and body) to the browser, based on the server layout object and current route.")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"single-spa-layout")," is 3.2kb gzipped (9kb ungzipped)."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"You only need to install the layout engine into your ",(0,a.kt)("a",{parentName:"p",href:"/docs/configuration/"},"root config")," (not in any other application)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm install --save single-spa-layout\n\n# or\nyarn add single-spa-layout\n")),(0,a.kt)("h3",{id:"browser--nodejs-support"},"Browser / NodeJS support"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"single-spa-layout")," works in all browsers supported by single-spa, including IE11. On the server, all NodeJS versions that support ESM are supported."),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"You must use single-spa@>=5.4.0 in order for the layout engine to work. Additionally, you may not provide custom ",(0,a.kt)("inlineCode",{parentName:"p"},"domElementGetter")," functions for any of your single-spa applications, as those override the configuration within single-spa-layout."),(0,a.kt)("h2",{id:"basic-usage"},"Basic usage"),(0,a.kt)("p",null,"In your root html file, add a ",(0,a.kt)("inlineCode",{parentName:"p"},"<template>")," element to the head. It should have a ",(0,a.kt)("inlineCode",{parentName:"p"},"<single-spa-router>")," element that contains ",(0,a.kt)("inlineCode",{parentName:"p"},"<route>")," elements, ",(0,a.kt)("inlineCode",{parentName:"p"},"<application>")," elements, and any other dom elements:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<html>\n  <head>\n    <template id="single-spa-layout">\n      <single-spa-router>\n        <nav class="topnav">\n          <application name="@organization/nav"></application>\n        </nav>\n        <div class="main-content">\n          <route path="settings">\n            <application name="@organization/settings"></application>\n          </route>\n          <route path="clients">\n            <application name="@organization/clients"></application>\n          </route>\n        </div>\n        <footer>\n          <application name="@organization/footer"></application>\n        </footer>\n      </single-spa-router>\n    </template>\n  </head>\n</html>\n')),(0,a.kt)("p",null,"Then inside of your root-config's JavaScript code, add the following:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { registerApplication, start } from 'single-spa';\nimport {\n  constructApplications,\n  constructRoutes,\n  constructLayoutEngine,\n} from 'single-spa-layout';\n\nconst routes = constructRoutes(document.querySelector('#single-spa-layout'));\nconst applications = constructApplications({\n  routes,\n  loadApp({ name }) {\n    return System.import(name);\n  },\n});\nconst layoutEngine = constructLayoutEngine({ routes, applications });\n\napplications.forEach(registerApplication);\nstart();\n")))}d.isMDXComponent=!0}}]);